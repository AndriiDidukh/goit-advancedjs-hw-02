{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\n\nconst startButton = document.querySelector('[data-start]');\nconst inputData = document.getElementById('datetime-picker');\nconst daysElement = document.querySelector('[data-days]');\nconst hoursElement = document.querySelector('[data-hours]');\nconst minutesElement = document.querySelector('[data-minutes]');\nconst secondsElement = document.querySelector('[data-seconds]');\n\nstartButton.disabled = true;\nstartButton.addEventListener('click', onClickButton);\n\nlet userSelectedDate;\nlet timerId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= Date.now()) {\n      iziToast.warning({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        position: 'center',\n        backgroundColor: 'orange',\n        maxWidth: '300px',\n      });\n      return;\n    }\n    startButton.disabled = false;\n    userSelectedDate = selectedDates[0];\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nflatpickr(inputData, options);\n\nfunction onClickButton() {\n  clearInterval(timerId);\n  const currentSelectedDate = userSelectedDate;\n  timerId = setInterval(() => {\n    const diff = currentSelectedDate - Date.now();\n\n    if (diff <= 0) {\n      clearInterval(timerId);\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    daysElement.textContent = String(days).padStart(2, '0');\n    hoursElement.textContent = String(hours).padStart(2, '0');\n    minutesElement.textContent = String(minutes).padStart(2, '0');\n    secondsElement.textContent = String(seconds).padStart(2, '0');\n  }, 1000);\n\n  startButton.disabled = true;\n}\n"],"names":["startButton","inputData","daysElement","hoursElement","minutesElement","secondsElement","onClickButton","userSelectedDate","timerId","options","selectedDates","iziToast","convertMs","ms","days","hours","minutes","seconds","flatpickr","currentSelectedDate","diff"],"mappings":"+IAIA,MAAMA,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,SAAS,eAAe,iBAAiB,EACrDC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAE9DL,EAAY,SAAW,GACvBA,EAAY,iBAAiB,QAASM,CAAa,EAEnD,IAAIC,EACAC,EAAU,KAEd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,GAAK,KAAK,IAAG,EAAI,CAClCC,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,SACV,gBAAiB,SACjB,SAAU,OAClB,CAAO,EACD,MACD,CACDX,EAAY,SAAW,GACvBO,EAAmBG,EAAc,CAAC,CACnC,CACH,EAEA,SAASE,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAC,EAAUjB,EAAWQ,CAAO,EAE5B,SAASH,GAAgB,CACvB,cAAcE,CAAO,EACrB,MAAMW,EAAsBZ,EAC5BC,EAAU,YAAY,IAAM,CAC1B,MAAMY,EAAOD,EAAsB,KAAK,IAAG,EAE3C,GAAIC,GAAQ,EAAG,CACb,cAAcZ,CAAO,EACrB,MACD,CAED,KAAM,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUQ,CAAI,EACxDlB,EAAY,YAAc,OAAOY,CAAI,EAAE,SAAS,EAAG,GAAG,EACtDX,EAAa,YAAc,OAAOY,CAAK,EAAE,SAAS,EAAG,GAAG,EACxDX,EAAe,YAAc,OAAOY,CAAO,EAAE,SAAS,EAAG,GAAG,EAC5DX,EAAe,YAAc,OAAOY,CAAO,EAAE,SAAS,EAAG,GAAG,CAC7D,EAAE,GAAI,EAEPjB,EAAY,SAAW,EACzB"}